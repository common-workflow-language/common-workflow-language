- args: [bwa, mem, -t, '4', -I, '1,2,3,4', -m, '3', draft-2/rabix/tests/test-files/chr20.fa,
    draft-2/rabix/tests/test-files/example_human_Illumina.pe_1.fastq, draft-2/rabix/tests/test-files/example_human_Illumina.pe_2.fastq]
  job: draft-2/bwa-mem-job.json
  stdout: output.sam
  tool: draft-2/bwa-mem-tool.cwl
  doc: General test of command line generation

- args: [bwa, mem, draft-2/rabix/tests/test-files/chr20.fa,
    "-XXX",
    "-YYY", draft-2/rabix/tests/test-files/example_human_Illumina.pe_1.fastq,
    "-YYY", draft-2/rabix/tests/test-files/example_human_Illumina.pe_2.fastq]
  job: draft-2/bwa-mem-job.json
  tool: draft-2/binding-test.cwl
  doc: Test nested prefixes with arrays

- args: [tmap, mapall, stage1, map1, --min-seq-length, '20', map2, --min-seq-length,
    '20', stage2, map1, --max-seq-length, '20', --min-seq-length, '10', --seed-length,
    '16', map2, --max-seed-hits, '-1', --max-seq-length, '20', --min-seq-length, '10']
  job: draft-2/tmap-job.json
  stdin: draft-2/reads.fastq
  stdout: output.sam
  tool: draft-2/tmap-tool.cwl
  doc: Test nested command line bindings and stdin/stdout redirection

- args: [cat, draft-2/hello.txt]
  job: draft-2/cat-job.json
  tool: draft-2/cat1-tool.cwl
  doc: Test command line with optional input (missing)

- args: [cat, -n, draft-2/hello.txt]
  job: draft-2/cat-n-job.json
  tool: draft-2/cat1-tool.cwl
  doc: Test command line with optional input (provided)

- args: [cat]
  job: draft-2/cat-job.json
  stdin: draft-2/hello.txt
  tool: draft-2/cat2-tool.cwl
  doc: Test command line with stdin redirection

- args: [cat, draft-2/hello.txt]
  job: draft-2/cat-job.json
  stdout: output.txt
  tool: draft-2/cat3-tool.cwl
  doc: Test command line with stdout redirection

- args: [cat]
  job: draft-2/cat-job.json
  stdin: draft-2/hello.txt
  stdout: output.txt
  tool: draft-2/cat4-tool.cwl
  doc: Test command line with stdin and stdout redirection

- args: [cat, foo.txt]
  createfiles: {foo.txt: 'The file is draft-2/hello.txt

      '}
  job: draft-2/cat-job.json
  tool: draft-2/template-tool.cwl
  doc: Test CreateFileRequirement ExpressionEngineRequirement.engineConfig features

- job: draft-2/cat-job.json
  output:
    output_file:
      class: File
      checksum: sha1$47a013e660d408619d894b20806b1d5086aab03b
      path: output.txt
      size: 13
  tool: draft-2/cat3-tool.cwl
  doc: Test command execution in Docker with stdout redirection

- job: draft-2/cat-job.json
  output:
    output.txt:
      class: File
      checksum: sha1$47a013e660d408619d894b20806b1d5086aab03b
      path: output.txt
      size: 13
  tool: draft-2/cat4-tool.cwl
  doc: Test command execution in Docker with stdin and stdout redirection

- job: draft-2/wc-job.json
  output:
    output:
      class: File
      checksum: sha1$631bfbac524e2d04cdcc5ec33ade827fc10b06ae
      path: output
      size: 15
  tool: draft-2/wc-tool.cwl
  doc: Test command execution in with stdin and stdout redirection

- job: draft-2/parseInt-job.json
  output: {output: 42}
  tool: draft-2/parseInt-tool.cwl
  doc: Test ExpressionTool with Docker-based expression engine

- job: draft-2/wc-job.json
  output: {output: 16}
  tool: draft-2/wc2-tool.cwl
  doc: Test outputEval to transform output

- job: draft-2/wc-job.json
  output: {count_output: 16}
  tool: draft-2/count-lines1-wf.cwl
  doc: Test two step workflow with imported tools

- job: draft-2/wc-job.json
  output: {count_output: 16}
  tool: draft-2/count-lines2-wf.cwl
  doc: Test two step workflow with inline tools

- job: draft-2/count-lines3-job.json
  output:
    count_output: [16, 1]
  tool: draft-2/count-lines3-wf.cwl
  doc: Test single step workflow with Scatter step

- job: draft-2/count-lines4-job.json
  output:
    count_output: [16, 1]
  tool: draft-2/count-lines4-wf.cwl
  doc: |
    Test single step workflow with Scatter step and two data links connected to
    same input, default merge behavior

- job: draft-2/count-lines6-job.json
  output:
    count_output: [32, 2]
  tool: draft-2/count-lines6-wf.cwl
  doc: |
    Test single step workflow with Scatter step and two data links connected to
    same input, nested merge behavior

- job: draft-2/count-lines6-job.json
  output:
    count_output: 34
  tool: draft-2/count-lines7-wf.cwl
  doc: |
    Test single step workflow with Scatter step and two data links connected to
    same input, flattened merge behavior

- job: draft-2/empty.json
  output: {count_output: 1}
  tool: draft-2/count-lines5-wf.cwl
  doc: Test workflow with default value for input parameter (missing)

- job: draft-2/wc-job.json
  output: {count_output: 16}
  tool: draft-2/count-lines5-wf.cwl
  doc: Test workflow with default value for input parameter (provided)

- job: draft-2/env-job.json
  output:
    out:
      class: File
      checksum: sha1$b3ec4ed1749c207e52b3a6d08c59f31d83bff519
      path: out
      size: 15
  tool: draft-2/env-tool1.cwl
  doc: Test EnvVarRequirement

- job: draft-2/scatter-job1.json
  output:
    out: ["foo one", "foo two", "foo three", "foo four"]
  tool: draft-2/scatter-wf1.cwl
  doc: Test workflow scatter with single scatter parameter

- job: draft-2/scatter-job2.json
  output:
    out: [["foo one three", "foo one four"], ["foo two three", "foo two four"]]
  tool: draft-2/scatter-wf2.cwl
  doc: Test workflow scatter with two scatter parameters and nested_crossproduct join method

- job: draft-2/scatter-job2.json
  output:
    out: ["foo one three", "foo one four", "foo two three", "foo two four"]
  tool: draft-2/scatter-wf3.cwl
  doc: Test workflow scatter with two scatter parameters and flat_crossproduct join method

- job: draft-2/scatter-job2.json
  output:
    out: ["foo one three", "foo two four"]
  tool: draft-2/scatter-wf4.cwl
  doc: Test workflow scatter with two scatter parameters and dotproduct join method

- tool: draft-2/echo-tool.cwl
  job: draft-2/env-job.json
  output:
    {"out": "hello test env\n"}
  doc: Test Any type input parameter

- job: draft-2/wc-job.json
  output: {count_output: 16}
  tool: draft-2/count-lines8-wf.cwl
  doc: Test nested workflow

- job: draft-2/env-job.json
  output:
    out:
      class: File
      checksum: sha1$b3ec4ed1749c207e52b3a6d08c59f31d83bff519
      path: out
      size: 15
  tool: draft-2/env-wf1.cwl
  doc: Test requirement priority

- job: draft-2/env-job.json
  output:
    out:
      class: File
      checksum: sha1$cdc1e84968261d6a7575b5305945471f8be199b6
      path: out
      size: 9
  tool: draft-2/env-wf2.cwl
  doc: Test requirements override hints

- job: draft-2/empty.json
  output: {count_output: 16}
  tool: draft-2/count-lines9-wf.cwl
  doc: Test default value on input parameter

- job: draft-2/revsort-job.json
  output:
    output:
      class: File
      checksum: sha1$b9214658cc453331b62c2282b772a5c063dbd284
      path: output.txt
      size: 1111
  tool: draft-2/revsort.cwl
  doc: Test sample workflows from the specification

- job: draft-2/cat-job.json
  output:
    output_file:
      class: File
      checksum: sha1$47a013e660d408619d894b20806b1d5086aab03b
      path: output.txt
      size: 13
  tool: draft-2/cat5-tool.cwl
  doc: Test unknown hints are ignored.

- job: draft-2/search-job.json
  output:
    outfile:
      class: File
      checksum: sha1$e2dc9daaef945ac15f01c238ed2f1660f60909a0
      path: result.txt
      size: 142
  tool: draft-2/search.cwl
  doc: |
    Test CreateFileRequirement linking input files and capturing secondaryFiles
    on input and output.

- job: draft-2/rename-job.json
  output:
    outfile:
      class: File
      checksum: sha1$327fc7aedf4f6b69a42a7c8b808dc5a7aff61376
      path: fish.txt
      size: 1111
  tool: draft-2/rename.cwl
  doc: |
    Test CreateFileRequirement with expression in filename.