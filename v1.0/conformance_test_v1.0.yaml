- job: v1.0/bwa-mem-job.json
  tool: v1.0/bwa-mem-tool.cwl
  output:
    args: [bwa, mem, -t, '2', -I, '1,2,3,4', -m, '3',
      chr20.fa,
      example_human_Illumina.pe_1.fastq,
      example_human_Illumina.pe_2.fastq]
  doc: General test of command line generation
  tags: [ required ]

- output:
    args: [bwa, mem, chr20.fa,
      "-XXX",
      "-YYY", example_human_Illumina.pe_1.fastq,
      "-YYY", example_human_Illumina.pe_2.fastq]
  job: v1.0/bwa-mem-job.json
  tool: v1.0/binding-test.cwl
  doc: Test nested prefixes with arrays
  tags: [ required ]

- output:
    args: [tmap, mapall, stage1, map1, --min-seq-length, '20', map2, --min-seq-length,
    '20', stage2, map1, --max-seq-length, '20', --min-seq-length, '10', --seed-length,
    '16', map2, --max-seed-hits, '-1', --max-seq-length, '20', --min-seq-length, '10']
  job: v1.0/tmap-job.json
  tool: v1.0/tmap-tool.cwl
  doc: Test nested command line bindings
  tags: [ schema_def ]

- output:
    args: [cat, hello.txt]
  job: v1.0/cat-job.json
  tool: v1.0/cat1-testcli.cwl
  doc: Test command line with optional input (missing)
  tags: [ required ]

- output:
    args: [cat, -n, hello.txt]
  job: v1.0/cat-n-job.json
  tool: v1.0/cat1-testcli.cwl
  doc: Test command line with optional input (provided)
  tags: [ required ]

- output:
    "foo": {
        "checksum": "sha1$63da67422622fbf9251a046d7a34b7ea0fd4fead",
        "class": "File",
        "location": "foo.txt",
        "size": 22
    }
  job: v1.0/cat-job.json
  tool: v1.0/template-tool.cwl
  doc: Test InitialWorkDirRequirement ExpressionEngineRequirement.engineConfig feature
  tags: [ initial_work_dir, inline_javascript ]

- job: v1.0/cat-job.json
  output:
    output_file:
      class: File
      checksum: sha1$47a013e660d408619d894b20806b1d5086aab03b
      location: output.txt
      size: 13
  tool: v1.0/cat3-tool.cwl
  doc: Test command execution in Docker with stdout redirection
  tags: [ required ]

- job: v1.0/cat-job.json
  tool: v1.0/cat3-tool-shortcut.cwl
  output:
    output_file:
      class: File
      checksum: sha1$47a013e660d408619d894b20806b1d5086aab03b
      location: Any
      size: 13
  doc: Test command execution in Docker with simplified syntax stdout redirection
  tags: [ required ]

- job: v1.0/cat-job.json
  output:
    output_file:
      class: File
      checksum: sha1$47a013e660d408619d894b20806b1d5086aab03b
      location: cat-out
      size: 13
  tool: v1.0/cat3-tool-mediumcut.cwl
  doc: Test command execution in Docker with stdout redirection
  tags: [ required ]

- job: v1.0/empty.json
  tool: v1.0/stderr.cwl
  doc: Test command line with stderr redirection
  output:
    output_file:
      class: File
      checksum: sha1$f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
      size: 4
      location: error.txt
  tags: [ shell_command ]

- job: v1.0/empty.json
  tool: v1.0/stderr-shortcut.cwl
  doc: Test command line with stderr redirection, brief syntax
  output:
    output_file:
      class: File
      checksum: sha1$f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
      size: 4
      location: Any
  tags: [ shell_command ]

- output:
    output_file:
      class: File
      size: 4
      checksum: sha1$f1d2d2f924e986ac86fdf7b36c94bcdf32beec15
      location: std.err
  job: v1.0/empty.json
  tool: v1.0/stderr-mediumcut.cwl
  doc: Test command line with stderr redirection, named brief syntax
  tags: [ shell_command ]

- job: v1.0/cat-job.json
  output:
    output_txt:
      class: File
      checksum: sha1$47a013e660d408619d894b20806b1d5086aab03b
      location: output.txt
      size: 13
  tool: v1.0/cat4-tool.cwl
  doc: Test command execution in Docker with stdin and stdout redirection
  tags: [ required ]

- job: v1.0/empty.json
  tool: v1.0/null-expression1-tool.cwl
  output:
    output: 1
  doc: Test default usage of Any in expressions.
  tags: [ inline_javascript ]

- job: v1.0/null-expression1-job.json
  tool: v1.0/null-expression1-tool.cwl
  output:
    output: 1
  doc: Test explicitly passing null to Any type inputs with default values.
  tags: [ inline_javascript ]

- job: v1.0/null-expression2-job.json
  tool: v1.0/null-expression1-tool.cwl
  output:
    output: 2
  doc: Testing the string 'null' does not trip up an Any with a default value.
  tags: [ inline_javascript ]

- job: v1.0/empty.json
  tool: v1.0/null-expression2-tool.cwl
  should_fail: true
  doc: Test Any without defaults can be unspecified.
  tags: [ inline_javascript ]

- job: v1.0/null-expression1-job.json
  tool: v1.0/null-expression2-tool.cwl
  should_fail: true
  doc: Test explicitly passing null to Any type without a default value.
  tags: [ inline_javascript ]

- job: v1.0/null-expression2-job.json
  tool: v1.0/null-expression2-tool.cwl
  output:
    output: 2
  doc: Testing the string 'null' does not trip up an Any without a default value.
  tags: [ inline_javascript ]

- job: v1.0/any-type-job.json
  tool: v1.0/any-type-compat.cwl
  output:
    output1: ["hello", "world"]
    output2: ["foo", "bar"]
    output3: hello
  doc: Testing Any type compatibility in outputSource
  tags: [ required ]

- job: v1.0/cat-job.json
  output:
    output:
      checksum: sha1$47a013e660d408619d894b20806b1d5086aab03b
      class: File
      location: output
      size: 13
  tool: v1.0/cat-tool.cwl
  doc: Test command execution in with stdin and stdout redirection
  tags: [ required ]

- job: v1.0/parseInt-job.json
  output: {output: 42}
  tool: v1.0/parseInt-tool.cwl
  doc: Test ExpressionTool with Docker-based expression engine
  tags: [ inline_javascript ]

- job: v1.0/wc-job.json
  output: {output: 16}
  tool: v1.0/wc2-tool.cwl
  doc: Test outputEval to transform output
  tags: [ inline_javascript ]

- job: v1.0/wc-job.json
  output: {count_output: 16}
  tool: v1.0/count-lines1-wf.cwl
  doc: Test two step workflow with imported tools
  tags: [ inline_javascript ]

- job: v1.0/wc-job.json
  output: {count_output: 16}
  tool: v1.0/count-lines2-wf.cwl
  doc: Test two step workflow with inline tools
  tags: [ inline_javascript ]

- job: v1.0/count-lines3-job.json
  output:
    count_output: [16, 1]
  tool: v1.0/count-lines3-wf.cwl
  doc: Test single step workflow with Scatter step
  tags: [ scatter, inline_javascript ]

- job: v1.0/count-lines4-job.json
  output:
    count_output: [16, 1]
  tool: v1.0/count-lines4-wf.cwl
  doc: |
    Test single step workflow with Scatter step and two data links connected to
    same input, default merge behavior
  tags: [ scatter, multiple_input, inline_javascript ]

- job: v1.0/count-lines6-job.json
  output:
    count_output: [32, 2]
  tool: v1.0/count-lines6-wf.cwl
  doc: |
    Test single step workflow with Scatter step and two data links connected to
    same input, nested merge behavior
  tags: [ scatter, multiple_input, inline_javascript ]

- job: v1.0/count-lines6-job.json
  output:
    count_output: 34
  tool: v1.0/count-lines7-wf.cwl
  doc: |
    Test single step workflow with Scatter step and two data links connected to
    same input, flattened merge behavior
  tags: [ multiple_input, inline_javascript ]

- job: v1.0/count-lines6-job.json
  output:
    count_output: 32
  tool: v1.0/count-lines13-wf.cwl
  doc: |
    Test that no MultipleInputFeatureRequirement is necessary when
    workflow step source is a single-item list
  tags: [ inline_javascript ]

- job: v1.0/empty.json
  output: {count_output: 1}
  tool: v1.0/count-lines5-wf.cwl
  doc: Test workflow with default value for input parameter (missing)
  tags: [ inline_javascript ]

- job: v1.0/wc-job.json
  output: {count_output: 16}
  tool: v1.0/count-lines5-wf.cwl
  doc: Test workflow with default value for input parameter (provided)
  tags: [ inline_javacscript ]

- job: v1.0/empty.json
  output: {default_output: workflow_default}
  tool: v1.0/echo-wf-default.cwl
  doc: Test that workflow defaults override tool defaults
  tags: [ required ]

- job: v1.0/env-job.json
  output:
    out:
      class: File
      checksum: sha1$b3ec4ed1749c207e52b3a6d08c59f31d83bff519
      location: out
      size: 15
  tool: v1.0/env-tool1.cwl
  doc: Test EnvVarRequirement
  tags: [ env_var ]

- job: v1.0/scatter-job1.json
  output:
    out: ["foo one", "foo two", "foo three", "foo four"]
  tool: v1.0/scatter-wf1.cwl
  doc: Test workflow scatter with single scatter parameter
  tags: [ scatter ]

- job: v1.0/scatter-job2.json
  output:
    out: [["foo one three", "foo one four"], ["foo two three", "foo two four"]]
  tool: v1.0/scatter-wf2.cwl
  doc: Test workflow scatter with two scatter parameters and nested_crossproduct join method
  tags: [ scatter ]

- job: v1.0/scatter-job2.json
  output:
    out: ["foo one three", "foo one four", "foo two three", "foo two four"]
  tool: "v1.0/scatter-wf3.cwl#main"
  doc: Test workflow scatter with two scatter parameters and flat_crossproduct join method
  tags: [ scatter ]

- job: v1.0/scatter-job2.json
  output:
    out: ["foo one three", "foo two four"]
  tool: "v1.0/scatter-wf4.cwl#main"
  doc: Test workflow scatter with two scatter parameters and dotproduct join method
  tags: [ scatter ]

- job: v1.0/scatter-empty-job1.json
  output:
    out: []
  tool: v1.0/scatter-wf1.cwl
  doc: Test workflow scatter with single empty list parameter
  tags: [ scatter ]

- job: v1.0/scatter-empty-job2.json
  output:
    out: [[], []]
  tool: v1.0/scatter-wf2.cwl
  doc: Test workflow scatter with two scatter parameters and nested_crossproduct join method with second list empty
  tags: [ scatter ]

- job: v1.0/scatter-empty-job3.json
  output:
    out: []
  tool: "v1.0/scatter-wf3.cwl#main"
  doc: Test workflow scatter with two scatter parameters and nested_crossproduct join method with first list empty
  tags: [ scatter ]

- job: v1.0/scatter-empty-job2.json
  output:
    out: []
  tool: "v1.0/scatter-wf3.cwl#main"
  doc: Test workflow scatter with two scatter parameters, one of which is empty and flat_crossproduct join method
  tags: [ scatter ]

- job: v1.0/scatter-empty-job4.json
  output:
    out: []
  tool: "v1.0/scatter-wf4.cwl#main"
  doc: Test workflow scatter with two empty scatter parameters and dotproduct join method
  tags: [ scatter ]

- tool: v1.0/echo-tool.cwl
  job: v1.0/env-job.json
  output:
    {"out": "hello test env\n"}
  doc: Test Any type input parameter
  tags: [ required ]

- job: v1.0/wc-job.json
  output: {count_output: 16}
  tool: v1.0/count-lines8-wf.cwl
  doc: Test nested workflow
  tags: [ subworkflow ]

- job: v1.0/env-job.json
  output:
    out:
      class: File
      checksum: sha1$b3ec4ed1749c207e52b3a6d08c59f31d83bff519
      location: out
      size: 15
  tool: v1.0/env-wf1.cwl
  doc: Test requirement priority
  tags: [ env_var ]

- job: v1.0/env-job.json
  output:
    out:
      class: File
      checksum: sha1$cdc1e84968261d6a7575b5305945471f8be199b6
      location: out
      size: 9
  tool: v1.0/env-wf2.cwl
  doc: Test requirements override hints
  tags: [ env_var ]

- job: v1.0/env-job.json
  output:
    out:
      class: File
      checksum: sha1$cdc1e84968261d6a7575b5305945471f8be199b6
      location: out
      size: 9
  tool: v1.0/env-wf3.cwl
  doc: Test requirements on workflow steps
  tags: [ env_var ]

- job: v1.0/empty.json
  output: {count_output: 16}
  tool: v1.0/count-lines9-wf.cwl
  doc: Test default value on step input parameter
  tags: [ inline_javascript ]

- job: v1.0/empty.json
  output: {count_output: 16}
  tool: v1.0/count-lines11-wf.cwl
  doc: Test use default value on step input parameter with empty source
  tags: [ inline_javascript ]

- job: v1.0/file1-null.json
  output: {count_output: 16}
  tool: v1.0/count-lines11-wf.cwl
  doc: Test use default value on step input parameter with null source
  tags: [ inline_javascript ]

- job: v1.0/cat-job.json
  output: {count_output: 1}
  tool: v1.0/count-lines11-wf.cwl
  doc: Test default value on step input parameter overridden by provided source
  tags: [ inline_javascript ]

- job: v1.0/revsort-job.json
  output:
    output:
      class: File
      checksum: sha1$b9214658cc453331b62c2282b772a5c063dbd284
      location: output.txt
      size: 1111
  tool: v1.0/revsort.cwl
  doc: Test simple workflow
  tags: [ required ]

- job: v1.0/cat-job.json
  output:
    output_file:
      class: File
      checksum: sha1$47a013e660d408619d894b20806b1d5086aab03b
      location: output.txt
      size: 13
  tool: v1.0/cat5-tool.cwl
  doc: Test unknown hints are ignored.
  tags: [ required ]

- job: v1.0/search-job.json
  output:
    outfile:
      class: File
      checksum: sha1$e2dc9daaef945ac15f01c238ed2f1660f60909a0
      location: result.txt
      size: 142
    indexedfile: {
        "location": "input.txt",
        "class": "File",
        "checksum": "sha1$327fc7aedf4f6b69a42a7c8b808dc5a7aff61376",
        "secondaryFiles": [
            {
                "location": "input.txt.idx1",
                "class": "File",
                "checksum": "sha1$553f3a09003a9f69623f03bec13c0b078d706023",
                "size": 1500
            },
            {
                "location": "input.idx2",
                "class": "File",
                "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709",
                "size": 0
            },
            {
                "location": "input.txt.idx3",
                "class": "File",
                "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709",
                "size": 0
            },
            {
                "location": "input.txt.idx4",
                "class": "File",
                "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709",
                "size": 0
            },
            {
                "location": "input.txt.idx5",
                "class": "File",
                "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709",
                "size": 0
            },
            {
                "location": "input.idx6.txt",
                "class": "File",
                "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709",
                "size": 0
            },
            {
            "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709",
            "class": "File",
            "location": "input.txt.idx7",
            "size": 0
            },
            {
            "checksum": "sha1$47a013e660d408619d894b20806b1d5086aab03b",
            "class": "File",
            "location": "hello.txt",
            "size": 13
            },
            {
            "class": "Directory",
            "listing": [{
               "basename": "index",
                "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709",
                "class": "File",
                "location": "index",
                "size": 0
            }],
            "location": "input.txt_idx8",
          }
        ],
        "size": 1111
    }
  tool: "v1.0/search.cwl#main"
  doc: |
    Test InitialWorkDirRequirement linking input files and capturing secondaryFiles
    on input and output.
  tags: [ initial_work_dir, inline_javascript ]

- job: v1.0/rename-job.json
  output:
    outfile:
      class: File
      checksum: sha1$327fc7aedf4f6b69a42a7c8b808dc5a7aff61376
      location: fish.txt
      size: 1111
  tool: v1.0/rename.cwl
  doc: |
    Test InitialWorkDirRequirement with expression in filename.
  tags: [ initial_work_dir ]

- job: v1.0/string-job.json
  output:
    out:
        class: File
        checksum: sha1$6a47aa22b2a9d13a66a24b3ee5eaed95ce4753cf
        location: example.conf
        size: 16

  tool: v1.0/iwdr-entry.cwl
  doc: Test if trailing newline is present in file entry in InitialWorkDir

- job: v1.0/wc-job.json
  output:
    output: 16
  tool: v1.0/wc4-tool.cwl
  doc: |
    Test inline expressions
  tags: [ inline_javascript ]

- job: v1.0/schemadef-job.json
  output:
    output:
        location: output.txt
        size: 12
        class: File
        checksum: "sha1$f12e6cfe70f3253f70b0dbde17c692e7fb0f1e5e"
  tool: v1.0/schemadef-tool.cwl
  doc: |
    Test SchemaDefRequirement definition used in tool parameter
  tags: [ schema_def, inline_javascript ]

- job: v1.0/schemadef-job.json
  output:
    output:
        location: output.txt
        size: 12
        class: File
        checksum: "sha1$f12e6cfe70f3253f70b0dbde17c692e7fb0f1e5e"
  tool: v1.0/schemadef-wf.cwl
  doc: |
    Test SchemaDefRequirement definition used in workflow parameter
  tags: [ schema_def ]

- job: v1.0/empty.json
  output: {
    "t1": {
        "bar": {
            "b az": 2,
            "b\"az": null,
            "b'az": true,
            "baz": "zab1",
            "buz": [
                "a",
                "b",
                "c"
            ]
        }
    },
    "t10": true,
    "t11": true,
    "t12": null,
    "t13": "-zab1",
    "t14": "-zab1",
    "t15": "-zab1",
    "t16": "-zab1",
    "t17": "zab1 zab1",
    "t18": "zab1 zab1",
    "t19": "zab1 zab1",
    "t2": {
        "b az": 2,
        "b\"az": null,
        "b'az": true,
        "baz": "zab1",
        "buz": [
            "a",
            "b",
            "c"
        ]
    },
    "t20": "zab1 zab1",
    "t21": "2 2",
    "t22": "true true",
    "t23": "true true",
    "t24": "null null",
    "t25": "b",
    "t26": "b b",
    "t3": {
        "b az": 2,
        "b\"az": null,
        "b'az": true,
        "baz": "zab1",
        "buz": [
            "a",
            "b",
            "c"
        ]
    },
    "t4": {
        "b az": 2,
        "b\"az": null,
        "b'az": true,
        "baz": "zab1",
        "buz": [
            "a",
            "b",
            "c"
        ]
    },
    "t5": "zab1",
    "t6": "zab1",
    "t7": "zab1",
    "t8": "zab1",
    "t9": 2,
    "t27": null,
    "t28": 3
    }
  tool: v1.0/params.cwl
  doc: |
    Test parameter evaluation, no support for JS expressions
  tags: [ required ]

- job: v1.0/empty.json
  output: {
    "t1": {
        "bar": {
            "b az": 2,
            "b\"az": null,
            "b'az": true,
            "baz": "zab1",
            "buz": [
                "a",
                "b",
                "c"
            ]
        }
    },
    "t10": true,
    "t11": true,
    "t12": null,
    "t13": "-zab1",
    "t14": "-zab1",
    "t15": "-zab1",
    "t16": "-zab1",
    "t17": "zab1 zab1",
    "t18": "zab1 zab1",
    "t19": "zab1 zab1",
    "t2": {
        "b az": 2,
        "b\"az": null,
        "b'az": true,
        "baz": "zab1",
        "buz": [
            "a",
            "b",
            "c"
        ]
    },
    "t20": "zab1 zab1",
    "t21": "2 2",
    "t22": "true true",
    "t23": "true true",
    "t24": "null null",
    "t25": "b",
    "t26": "b b",
    "t3": {
        "b az": 2,
        "b\"az": null,
        "b'az": true,
        "baz": "zab1",
        "buz": [
            "a",
            "b",
            "c"
        ]
    },
    "t4": {
        "b az": 2,
        "b\"az": null,
        "b'az": true,
        "baz": "zab1",
        "buz": [
            "a",
            "b",
            "c"
        ]
    },
    "t5": "zab1",
    "t6": "zab1",
    "t7": "zab1",
    "t8": "zab1",
    "t9": 2,
    "t27": null,
    "t28": 3
    }
  tool: v1.0/params2.cwl
  doc: |
    Test parameter evaluation, with support for JS expressions
  tags: [ inline_javascript ]

- output: {}
  job: v1.0/cat-job.json
  tool: v1.0/metadata.cwl
  doc: Test metadata
  tags: [ required ]

- job: v1.0/formattest-job.json
  output:
    output:
        "location": "output.txt"
        "format": "http://edamontology.org/format_2330"
        "size": 1111
        "class": "File"
        "checksum": "sha1$97fe1b50b4582cebc7d853796ebd62e3e163aa3f"
  tool: v1.0/formattest.cwl
  doc: |
    Test simple format checking.
  tags: [ required ]

- job: v1.0/formattest2-job.json
  output:
    output:
        "location": "output.txt"
        "format": "http://edamontology.org/format_1929"
        "size": 12010
        "class": "File"
        "checksum": "sha1$971d88faeda85a796752ecf752b7e2e34f1337ce"
  tool: v1.0/formattest2.cwl
  doc: |
    Test format checking against ontology using subclassOf.
  tags: [ required ]

- job: v1.0/formattest2-job.json
  output:
    output:
        "location": "output.txt"
        "format": "http://edamontology.org/format_1929"
        "size": 12010
        "class": "File"
        "checksum": "sha1$971d88faeda85a796752ecf752b7e2e34f1337ce"
  tool: v1.0/formattest3.cwl
  doc: |
    Test format checking against ontology using equivalentClass.
  tags: [ required ]

- tool: v1.0/optional-output.cwl
  job: v1.0/cat-job.json
  output:
    optional_file: null
    output_file:
        location: output.txt
        size: 13
        class: "File"
        checksum: "sha1$47a013e660d408619d894b20806b1d5086aab03b"
  doc: |
    Test optional output file and optional secondaryFile on output.
  tags: [ docker ]


- job: v1.0/empty.json
  output: {
    "out": "a string\n"
  }
  tool: v1.0/vf-concat.cwl
  doc: Test that second expression in concatenated valueFrom is not ignored
  tags: [ inline_javascript ]

- job: v1.0/step-valuefrom-wf.json
  output: {count_output: 16}
  tool: v1.0/step-valuefrom-wf.cwl
  doc: Test valueFrom on workflow step.
  tags: [ step_input, inline_javascript ]

- job: v1.0/step-valuefrom-job.json
  output: {val: "3\n"}
  tool: v1.0/step-valuefrom2-wf.cwl
  doc: Test valueFrom on workflow step with multiple sources
  tags: [ step_input, inline_javascript, multiple_input ]

- job: v1.0/step-valuefrom-job.json
  output: {val: "3\n"}
  tool: v1.0/step-valuefrom3-wf.cwl
  doc: Test valueFrom on workflow step referencing other inputs
  tags: [ step_input, inline_javascript ]

- job: v1.0/record-output-job.json
  output:
    "orec": {
        "ofoo": {
            "location": "foo",
            "size": 1111,
            "class": "File",
            "checksum": "sha1$327fc7aedf4f6b69a42a7c8b808dc5a7aff61376"
        },
        "obar": {
            "location": "bar",
            "size": 12010,
            "class": "File",
            "checksum": "sha1$aeb3d11bdf536511649129f4077d5cda6a324118"
        }
    }
  tool: v1.0/record-output.cwl
  doc: Test record type output binding.
  tags: [ shell_command ]

- job: v1.0/empty.json
  output: {
    "foo": {
        "location": "foo",
        "class": "File",
        "checksum": "sha1$f1d2d2f924e986ac86fdf7b36c94bcdf32beec15",
        "size": 4
    }
  }
  tool: v1.0/test-cwl-out.cwl
  doc: |
    Test support for reading cwl.output.json when running in a Docker container
    and just 'path' is provided.
  tags: [ shell_command ]

- job: v1.0/empty.json
  output: {
    "foo": {
        "location": "foo",
        "class": "File",
        "checksum": "sha1$f1d2d2f924e986ac86fdf7b36c94bcdf32beec15",
        "size": 4
    }
  }
  tool: v1.0/test-cwl-out2.cwl
  doc: |
    Test support for reading cwl.output.json when running in a Docker container
    and just 'location' is provided.
  tags: [ shell_command ]

- job: v1.0/abc.json
  output:
    files: [{
        "location": "a",
        "size": 0,
        "class": "File",
        "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709"
    },
    {
        "location": "b",
        "size": 0,
        "class": "File",
        "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709"
    },
    {
        "location": "c",
        "size": 0,
        "class": "File",
        "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709"
    }]
  tool: v1.0/glob-expr-list.cwl
  doc: Test support for returning multiple glob patterns from expression
  tags: [ required ]

- job: v1.0/scatter-valuefrom-job1.json
  output:
    out: ["foo one one", "foo one two", "foo one three", "foo one four"]
  tool: v1.0/scatter-valuefrom-wf1.cwl
  doc: Test workflow scatter with single scatter parameter and valueFrom on step input
  tags: [ scatter, step_input ]

- job: v1.0/scatter-valuefrom-job2.json
  output:
    out: [["foo one one three", "foo one one four"], ["foo one two three", "foo one two four"]]
  tool: v1.0/scatter-valuefrom-wf2.cwl
  doc: Test workflow scatter with two scatter parameters and nested_crossproduct join method and valueFrom on step input
  tags: [ scatter, step_input ]

- job: v1.0/scatter-valuefrom-job2.json
  output:
    out: ["foo one one three", "foo one one four", "foo one two three", "foo one two four"]
  tool: "v1.0/scatter-valuefrom-wf3.cwl#main"
  doc: Test workflow scatter with two scatter parameters and flat_crossproduct join method and valueFrom on step input
  tags: [ scatter, step_input ]

- job: v1.0/scatter-valuefrom-job2.json
  output:
    out: ["foo one one three", "foo one two four"]
  tool: "v1.0/scatter-valuefrom-wf4.cwl#main"
  doc: Test workflow scatter with two scatter parameters and dotproduct join method and valueFrom on step input
  tags: [ scatter, step_input ]

- job: v1.0/scatter-valuefrom-job1.json
  output:
    out: ["foo one one", "foo two two", "foo three three", "foo four four"]
  tool: v1.0/scatter-valuefrom-wf5.cwl
  doc: Test workflow scatter with single scatter parameter and valueFrom on step input
  tags: [ scatter, step_input ]

- job: v1.0/scatter-valuefrom-job3.json
  tool: v1.0/scatter-valuefrom-wf6.cwl
  doc: Test valueFrom eval on scattered input parameter
  output:
    out_message: [
        {
            "checksum": "sha1$98030575f6fc40e5021be5a8803a6bef94aee11f",
            "location": Any,
            "class": "File",
            "size": 16
        },
        {
            "checksum": "sha1$edcacd50778d98ae113015406b3195c165059dd8",
            "location": Any,
            "class": "File",
            "size": 16
        }
    ]
  tags: [ scatter, step_input ]

- job: v1.0/conflict-job.json
  output: {
    "fileout": {
        "location": "out.txt",
        "checksum": "sha1$a2d8d6e7b28295dc9977dc3bdb652ddd480995f0",
        "class": "File",
        "size": 25
    }
  }
  tool: "v1.0/conflict-wf.cwl#collision"
  doc: Test workflow two input files with same name.
  tags: [ required ]

- job: v1.0/dir-job.yml
  output:
    "outlist": {
        "size": 20,
        "location": "output.txt",
        "checksum": "sha1$13cda8661796ae241da3a18668fb552161a72592",
        "class": "File"
    }
  tool: v1.0/dir.cwl
  doc: Test directory input with parameter reference
  tags: [ shell_command ]

- job: v1.0/dir-job.yml
  output:
    "outlist": {
        "size": 20,
        "location": "output.txt",
        "checksum": "sha1$13cda8661796ae241da3a18668fb552161a72592",
        "class": "File"
    }
  tool: v1.0/dir2.cwl
  doc: Test directory input in Docker
  tags: [ required ]

- job: v1.0/dir3-job.yml
  output:
    "outdir": {
        "class": "Directory",
        "listing": [
            {
              "class": "File",
              "location": "goodbye.txt",
                "checksum": "sha1$dd0a4c4c49ba43004d6611771972b6cf969c1c01",
                "size": 24
            },
            {
              "class": "File",
              "location": "hello.txt",
                "checksum": "sha1$47a013e660d408619d894b20806b1d5086aab03b",
                "size": 13
            }
        ],
    }
  tool: v1.0/dir3.cwl
  doc: Test directory output
  tags: [ required ]

- job: v1.0/dir4-job.yml
  output: {
    "outlist": {
      "checksum": "sha1$13cda8661796ae241da3a18668fb552161a72592",
      "size": 20,
      "location": "output.txt",
      "class": "File"
    }
  }
  tool: v1.0/dir4.cwl
  doc: Test directories in secondaryFiles
  tags: [ shell_command ]

- job: v1.0/dir-job.yml
  output: {
    "outlist": {
        "checksum": "sha1$13cda8661796ae241da3a18668fb552161a72592",
        "size": 20,
        "location": "output.txt",
        "class": "File"
    }
  }
  tool: v1.0/dir5.cwl
  doc: Test dynamic initial work dir
  tags: [ shell_command, initial_work_dir ]

- job: v1.0/stagefile-job.yml
  output: {
    "outfile": {
        "checksum": "sha1$b769c7b2e316edd4b5eb2d24799b2c1f9d8c86e6",
        "size": 1111,
        "location": "bob.txt",
        "class": "File"
    }
  }
  tool: v1.0/stagefile.cwl
  doc: Test writable staged files.
  tags: [ initial_work_dir ]

- job: v1.0/file-literal.yml
  output:
    output_file:
      class: File
      checksum: sha1$d0e04ff6c413c7d57f9a0ca0a33cd3ab52e2dd9c
      location: output.txt
      size: 18
  tool: v1.0/cat3-tool.cwl
  doc: Test file literal as input
  tags: [ required ]

- job: v1.0/arguments-job.yml
  output:
    classfile:
        checksum: sha1$e68df795c0686e9aa1a1195536bd900f5f417b18
        location: Hello.class
        class: File
        size: 184
  tool: v1.0/linkfile.cwl
  doc: Test expression in InitialWorkDir listing
  tags: [ inline_javascript, initial_work_dir ]

- job: v1.0/wc-job.json
  output:
    b:
        checksum: sha1$c4cfd130e7578714e3eef91c1d6d90e0e0b9db3e
        location: whale.xtx
        class: File
        size: 21
  tool: v1.0/nameroot.cwl
  doc: Test nameroot/nameext expression in arguments, stdout
  tags: [ required ]

- job: v1.0/dir-job.yml
  output:
    "outlist": {
        "size": 20,
        "location": "output.txt",
        "checksum": "sha1$13cda8661796ae241da3a18668fb552161a72592",
        "class": "File"
    }
  tool: v1.0/dir6.cwl
  doc: Test directory input with inputBinding
  tags: [ shell_command ]

- job: v1.0/nested-array-job.yml
  output:
    echo:
        checksum: sha1$3f786850e387550fdab836ed7e6dc881de23001b
        location: echo.txt
        class: File
        size: 2
  tool: v1.0/nested-array.cwl
  doc: Test command line generation of array-of-arrays
  tags: [ required ]

- job: v1.0/empty.json
  output: {}
  tool: v1.0/envvar.cwl
  doc: Test $HOME and $TMPDIR are set correctly
  tags: [ shell_command ]

- job: v1.0/empty.json
  output: {}
  tool: v1.0/envvar2.cwl
  doc: Test $HOME and $TMPDIR are set correctly in Docker
  tags: [ shell_command ]

- job: v1.0/empty.json
  output:
    "out": {
        "checksum": "sha1$7448d8798a4380162d4b56f9b452e2f6f9e24e7a",
        "location": "whatever.txt",
        "class": "File",
        "size": 2
    }
  tool: "v1.0/js-expr-req-wf.cwl#wf"
  doc: Test that expressionLib requirement of individual tool step overrides expressionLib of workflow.
  tags: [ inline_javascript ]

- job: v1.0/initialworkdirrequirement-docker-out-job.json
  output:
    OUTPUT:
      "checksum": "sha1$aeb3d11bdf536511649129f4077d5cda6a324118"
      "location": "ref.fasta"
      "secondaryFiles": [{
        "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709",
        "location": "ref.fasta.fai",
          "class": "File",
          "size": 0
      }]
      "class": "File"
      "size": 12010
  tool: v1.0/initialworkdirrequirement-docker-out.cwl
  doc: Test output of InitialWorkDir
  tags: [ docker, initial_work_dir ]

- job: v1.0/wc-job.json
  output: {count_output: 16}
  tool: v1.0/count-lines10-wf.cwl
  doc: Test embedded subworkflow
  tags: [ subworkflow ]

- job: v1.0/docker-array-secondaryfiles-job.json
  output: {
    "bai_list": {
        "checksum": "sha1$081fc0e57d6efa5f75eeb237aab1d04031132be6",
        "location": "fai.list",
        "class": "File",
        "size": 386
    }
  }
  tool: v1.0/docker-array-secondaryfiles.cwl
  doc: Test secondaryFiles on array of files.
  tags: [ docker, inline_javascript, shell_command ]

- job: v1.0/dir7.yml
  output: {
    "dir": {
        "location": "a_directory",
        "class": "Directory",
        "listing": [
            {
                "class": "File",
                "location": "whale.txt",
                "checksum": "sha1$327fc7aedf4f6b69a42a7c8b808dc5a7aff61376",
                "size": 1111
            },
            {
                "class": "File",
                "location": "hello.txt",
                "checksum": "sha1$47a013e660d408619d894b20806b1d5086aab03b",
                "size": 13
            }
        ]
    }
  }
  tool: v1.0/dir7.cwl
  doc: Test directory literal output created by ExpressionTool
  tags: [ inline_javascript ]

- job: v1.0/empty.json
  output:
    lit:
      location: "a_file"
      class: "File"
      checksum: "sha1$fea23663b9c8ed71968f86415b5ec091bb111448"
      size: 19
  tool: v1.0/file-literal-ex.cwl
  doc: Test file literal output created by ExpressionTool
  tags: [ inline_javascript ]

- job: v1.0/empty.json
  output:
    "thing": {
        "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709",
        "location": "thing",
        "class": "File",
        "size": 0
    }
  tool: v1.0/docker-output-dir.cwl
  doc: Test dockerOutputDirectory
  tags: [ docker ]

- job: v1.0/empty.json
  output:
    out:
      class: File
      checksum: sha1$b3ec4ed1749c207e52b3a6d08c59f31d83bff519
      location: out
      size: 15
  tool: v1.0/imported-hint.cwl
  doc: Test hints with $import
  tags: [ required ]

- output: {}
  job: v1.0/default_path_job.yml
  tool: v1.0/default_path.cwl
  doc: Test warning instead of error when default path is not found
  tags: [ required ]

- output:
    args: [-A,'2',-B,baz,-C,'10','9','8','7','6','5','4','3','2','1',-D]
  job: v1.0/empty.json
  tool: v1.0/inline-js.cwl
  doc: Test InlineJavascriptRequirement with multiple expressions in the same tool
  tags: [ inline_javascript ]

- job: v1.0/recursive-input-directory.yml
  output:
    output_dir: {
        "basename": "work_dir",
        "class": "Directory",
        "listing": [
            {
                "basename": "a",
                "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709",
                "class": "File",
                "location": "work_dir/a",
                "size": 0
            },
            {
                "basename": "b",
                "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709",
                "class": "File",
                "location": "work_dir/b",
                "size": 0
            },
            {
                "basename": "c",
                "class": "Directory",
                "listing": [
                    {
                        "basename": "d",
                        "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709",
                        "class": "File",
                        "location": "work_dir/c/d",
                        "size": 0
                    }
                ],
                "location": "work_dir/c",
            },
            {
                "basename": "e",
                "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709",
                "class": "File",
                "location": "work_dir/e",
                "size": 0
            },
        ],
        "location": "work_dir",
      }
    test_result: {
        "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709",
        "class": "File",
        "location": "output.txt",
        "size": 0
      }
  tool: v1.0/recursive-input-directory.cwl
  doc: Test if a writable input directory is recursivly copied and writable
  tags: [ inline_javascript, initial_work_dir, shell_command ]

- output:
    out: "t\n"
  job: v1.0/empty.json
  tool: v1.0/null-defined.cwl
  doc: Test that missing parameters are null (not undefined) in expression
  tags: [ inline_javascript ]

- output:
    out: "f\n"
  job: v1.0/cat-job.json
  tool: v1.0/null-defined.cwl
  doc: Test that provided parameter is not null in expression
  tags: [ inline_javascript ]

- job: v1.0/revsort-job.json
  output:
    output:
      class: File
      checksum: sha1$b9214658cc453331b62c2282b772a5c063dbd284
      location: output.txt
      size: 1111
  tool: v1.0/revsort-packed.cwl#main
  doc: Test compound workflow document
  tags: [ required ]

- job: v1.0/basename-fields-job.yml
  output:
    extFile:
      checksum: sha1$301a72c82a835e1737caf30f94d0eec210c4d9f1
      class: File
      size: 5
      location: Any
      path: Any
    rootFile:
      checksum: sha1$b4a583c391e234cf210e1d576f68f674c8ad7ecd
      class: File
      size: 10
      location: Any
      path: Any
  tool: v1.0/basename-fields-test.cwl
  doc: Test that nameroot and nameext are generated from basename at execution time by the runner
  tags: [ step_input_expression ]

- job: v1.0/wc-job.json
  output: {}
  tool: v1.0/initialwork-path.cwl
  doc: Test that file path in $(inputs) for initialworkdir is in $(outdir).
  tags: [ initial_work_dir ]

- job: v1.0/count-lines6-job.json
  output:
    count_output: 34
  tool: v1.0/count-lines12-wf.cwl
  doc: |
    Test single step workflow with Scatter step and two data links connected to
    same input, flattened merge behavior. Workflow inputs are set as list
  tags: [ multiple_input, inline_javascript ]

- job: v1.0/sum-job.json
  output:
    result: 12
  tool: v1.0/sum-wf.cwl
  doc: Test step input with multiple sources with multiple types
  tags: [ step_input, inline_javascript, multiple_input ]

- job: v1.0/empty.json
  output: {
    "stderr_file": {
        "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709",
        "location": Any,
        "class": "File",
        "size": 0
    },
    "stdout_file": {
        "checksum": "sha1$1555252d52d4ec3262538a4426a83a99cfff4402",
        "location": Any,
        "class": "File",
        "size": 9
    }
  }
  tool: v1.0/shellchar.cwl
  doc: "Test that shell directives are not interpreted."
  tags: [ required ]

- job: v1.0/empty.json
  output: {
    "stderr_file": {
        "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709",
        "location": Any,
        "class": "File",
        "size": 0
    },
    "stdout_file": {
        "checksum": "sha1$1555252d52d4ec3262538a4426a83a99cfff4402",
        "location": Any,
        "class": "File",
        "size": 9
    }
  }
  tool: v1.0/shellchar2.cwl
  doc: "Test that shell directives are quoted."
  tags: [ shell_command ]

- job: v1.0/empty.json
  output:
    out: {
        "basename": "emptyWritableDir",
        "listing": [
            {
                "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709",
                "basename": "blurg",
                "location": "blurg",
                "class": "File",
                "size": 0
            }
        ],
        "location": "emptyWritableDir",
        "class": "Directory"
    }
  tool: v1.0/writable-dir.cwl
  doc: Test empty writable dir with InitialWorkDirRequirement
  tags: [ inline_javascript, initial_work_dir ]

- job: v1.0/empty.json
  output:
    out: {
        "basename": "emptyWritableDir",
        "listing": [
            {
                "checksum": "sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709",
                "basename": "blurg",
                "location": "blurg",
                "class": "File",
                "size": 0
            }
        ],
        "location": "emptyWritableDir",
        "class": "Directory"
    }
  tool: v1.0/writable-dir-docker.cwl
  doc: Test empty writable dir with InitialWorkDirRequirement inside Docker
  tags: [ inline_javascript, initial_work_dir ]

- job: v1.0/dynresreq-job.json
  tool: v1.0/dynresreq.cwl
  doc: Test dynamic resource reqs referencing inputs
  output:
     output: {
        "location": "cores.txt",
        "size": 2,
        "class": "File",
        "checksum": "sha1$7448d8798a4380162d4b56f9b452e2f6f9e24e7a"
     }
  tags: [ resource ]

- job: v1.0/file-literal.yml
  output:
    output_file:
      class: File
      checksum: sha1$d0e04ff6c413c7d57f9a0ca0a33cd3ab52e2dd9c
      location: output.txt
      size: 18
  tool: v1.0/cat3-nodocker.cwl
  doc: Test file literal as input without Docker
  tags: [ required ]

- doc: Test that OutputBinding.glob is sorted as specified by POSIX
  job: v1.0/empty.json
  tool: v1.0/glob_test.cwl
  output:
    letters:
      - checksum: sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709
        location: a
        class: File
        size: 0
      - checksum: sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709
        location: b
        class: File
        size: 0
      - checksum: sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709
        location: c
        class: File
        size: 0
      - checksum: sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709
        location: w
        class: File
        size: 0
      - checksum: sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709
        location: x
        class: File
        size: 0
      - checksum: sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709
        location: y
        class: File
        size: 0
      - checksum: sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709
        location: z
        class: File
        size: 0
  tags: [ required ]

- doc: Test InitialWorkDirRequirement with a nested directory structure from another step
  job: v1.0/empty.json
  output:
    ya_empty:
      class: File
      checksum: sha1$da39a3ee5e6b4b0d3255bfef95601890afd80709
      location: ya
      size: 0
  tool: v1.0/iwdr_with_nested_dirs.cwl
  tags: [ initial_work_dir ]

- job: v1.0/bool-empty-inputbinding-job.json
  output: {
    "args": [
    ]
  }
  tool: v1.0/bool-empty-inputbinding.cwl
  doc: "Test that boolean flags do not appear on command line if inputBinding is empty and not null"
  tags: [ required ]

- job: v1.0/empty.json
  output: {
    "args": []
  }
  tool: v1.0/stage-unprovided-file.cwl
  doc: Test that expression engine does not fail to evaluate reference to self
       with unprovided input
  tags: [ inline_javascript ]

- tool: v1.0/exit-success.cwl
  doc: Test successCodes
  job: v1.0/empty.json
  output: {}
  tags: [ required ]

- job: v1.0/dynresreq-job.json
  doc: Test simple workflow with a dynamic resource requirement
  tool: v1.0/dynresreq-workflow.cwl
  output:
     cores: {
        "location": "output",
        "size": 2,
        "class": "File",
        "checksum": "sha1$7448d8798a4380162d4b56f9b452e2f6f9e24e7a"
     }
  tags: [ resource ]

- job: v1.0/empty-array-job.json
  output: {
    "args": []
  }
  tool: v1.0/empty-array-input.cwl
  doc: "Test that empty array input does not add anything to command line"
  tags: [ required ]

- job: v1.0/empty.json
  tool: v1.0/steplevel-resreq.cwl
  doc: Test that ResourceRequirement on a step level redefines requirement on the workflow level
  output:
     out: {
        "location": "cores.txt",
        "size": 2,
        "class": "File",
        "checksum": "sha1$e5fa44f2b31c1fb553b6021e7360d07d5d91ff5e"
     }
  tags: [ resource ]

- job: v1.0/array-of-strings-job.yml
  output: {
    "args": ["replacementValue"]
  }
  tool: v1.0/valueFrom-constant.cwl
  doc: Test valueFrom with constant value overriding provided array inputs
  tags: [ inline_javascript ]

- job: v1.0/empty.json
  output: {
    "outfile": {
        "size": 1500,
        "class": "File",
        "checksum": "sha1$553f3a09003a9f69623f03bec13c0b078d706023",
        "location": "result.txt"
    }
  }
  tool: v1.0/wh/default-secondaryFile.cwl
  doc: Test discover secondaryFile on default file input, packed wf
  tags: [ required ]

- job: v1.0/empty.json
  output: {
    "outfile": {
        "size": 1500,
        "class": "File",
        "checksum": "sha1$553f3a09003a9f69623f03bec13c0b078d706023",
        "location": "result.txt"
    }
  }
  tool: v1.0/wh/default-secondaryFile2.cwl
  doc: Test discover secondaryFile on default file input, split wf
  tags: [ required ]
